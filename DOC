SYSTEMCALLS:
    Register    | Purpose
    -------------------------------------
    AH          | function number
    BX, CX, DX  | Parameters
    DI, SI, BP  | Parameters
    AX          | return value
    
    call using int 0x21
    
AH = 0x00:
    EXIT()
    
    exitcode in BX
    
    terminates process and starts command.bin (back to shell)
    
AH = 0x01
    PRINT()
    
    pointer to string in DX
    colorcode in BL
    
    Prints the \0 terminated string with color bl at
    the current cursor positon
    
AH = 0x02
    STRCMP()
    
    Pointer to first string in DI
    Pointer to second string in SI
    Returnvalue in AL
    
    Compares the two \0 terminated strings
    If they are equal AL=0, else AL=1
    
AH = 0x03:
    SHORTTOSTRING()
    
    Pointer to stringbuffer in DX
    Short to convert in CX
    
    Converts the integer from cx into a string and saves
    it in the buffer. The string has leading zeros
    if the integer has less than 5 digits.
    
AH = 0x04:
    READLINE()
    
    Pointer to stringbuffer in DX
    Maximum stringlength in CX
    Returns how many chars were read in CX
    
    reads a string from the keyboar

AH = 0x05:
    LOADFILE()
    
    Pointer to filename string in DX
    Pointer to target buffer in BP:EBX
    Returns filesize in ECX
    Returns errorcode in AX, AX=0 if success
    
    Loads the file with the filename in DX into the memory
    at address BP:EBX and saves the filesize reported from the
    filesystem in ECX.
    
AH = 0x06:
    GETTIMESTRING()
    
    Returns a pointer to string with the current time in DX.
    
AH = 0x07:
    GETDATESTRING()
    
    Returns a pointer to string with the current date in DX.    
    
AH = 0x08:
    GETVERSION()
    
    Returns the versionnumber in AX.
    AH = Major, AL = Minor
    
AH = 0x09:
    STRINGTOINT()

    Pointer to string in DS:DX
    Returns the integer in ECX (on success)
    Returns errorcode in AX
    Carryflag indicates error
    
    Tries to convert the string in DS:DX into an integer in ECX.
    If an error occours, the errorcode is in AX, ECX=0 and the carry flag ist set.

AH = 0X0A:
    DELETEFILE()
    
    DUMMY FUNCTION, TODO

AH = 0x0B:
    RANDOM()
    
    Returns value in ECX.
    
    Calculates a pseudorandom number and returns it in ECX.

AH = 0x0C:
    GETCPUINFO()
    
    Returns stringpointer to CPU vendor in AX.
    Returns stringpointer to CPU model in BX.

AH = 0x0D:
    HEXSTRTOBYTE()
    
    Pointer to hexstring in DX.
    Returns integer in CL.
    
    Converts the given 2-character string in hexadecimal
    to an integer in CL.

AH = 0x0E:
    SETCURSORPOS()
    
    Columnnumber in DH
    Rownumber in DL
    
    Moves the cursor to the position described in DH:DL

AH = 0x0F:
    GETCURSORPOS()
    
    Returns the row in DH
    Returns the column in DL
   
    Returns the current cursor position.
   
AH = 0x10:
    PRINTCHAR()
    
    Color to print in in DL
    Character to print in DH
    
    Prints a single character in DH with the color from DL to the
    current cursor position.
   
AH = 0x11:
    LOADROOT()
    
    Returns number of entries in rootdir in CX.
    
    Loads the root directory of flopp0 into the directory cache.
   
AH = 0x12:
    SAVEROOT()
    
    DUMMY FUNCTION
    
AH = 0x13:
    FINDFILE()
    
    Pointer to filenamestring in DX.
    Returns the index of the file in the directory in AX.
    Returns -1 in AX on error.
    
AH = 0x14:
    WRITEFILE()
    
    DUMMY FUNCTION
    
AH = 0x15:
    BYTETOHEXSTR()
    
    Integerbyte in CL
    Returns a stringpointer to a three character string in DX
    
    Converts the byte in CL into a hexstring that is \0 terminated.

AH = 0x16:
    BCDTOINT()
    
    BCD byte in AL
    Returns the integer in AX
    
    Converts the binary coded decimal in AL into an integer in AX.

AH = 0x17:
    STARTPROGRAM()
    
    Pointer to filenamesting in DX
    Pointer to argument string in ES:DI
    
    Tries to launch the programm with the given filename
    and passes the given argument string to it.
    
AH = 0xAA:
    INTTOSTRING()
    
    Pointer to stringbuffer in EDX
    Integer to convert in ECX
    
    Converts the integer from ecx into a string and saves
    it in the buffer.
    
AH = 0xFF:
    DEBUG1()
    
    Any value on EDX.
    
    Prints the value in EDX interpreted as integer to the current 
    cursor position.
